#! /usr/bin/env python3

# vars can be set in this file to serve as compile time constants
# other scripts can just reference scr_const.SCR_CNTL_BASE (etc) without modification

SCR_CNTL_BASE = '@SCR_CNTL_BASE@'
SCR_CACHE_BASE = '@SCR_CACHE_BASE@'
SCR_CACHE_SIZE = '1'  # '@SCR_CACHE_SIZE@'
SCR_CONFIG_FILE = '@SCR_CONFIG_FILE@'
X_DATADIR = '@X_DATADIR@'
X_BINDIR = '@X_BINDIR@'
X_LIBDIR = '@X_LIBDIR@'
PDSH_EXE = '@PDSH_EXE@'
SCR_RESOURCE_MANAGER = '@SCR_RESOURCE_MANAGER@'
### PMIX constants
CPPR_LDFLAGS = '@CPPR_LDFLAGS@'
HAVE_LIBCPPR = '@HAVE_LIBCPPR@'
### Nodetests to run during list_down_nodes
### A comma separated list
SCR_NODE_TESTS = '@SCR_NODE_TESTS@'
#SCR_NODE_TESTS = 'ping,pdsh_echo,dir_capacity'
# ping: remove remove nodes that don't respond to a ping from the root node
#   ping is defined in nodetests.py
# pdsh_echo: remove nodes that don't respond to pdsh echo UP
#   echo UP is ran via the launcher.parallel_exec
# dir_capacity: remove nodes that fail scr_check_node.py
#   scr_check_node.py is ran via the launcher.parallel_exec
### A file with each line a comma separated list of tests
SCR_NODE_TESTS_FILE = '@SCR_NODE_TESTS_FILE@'
### Explicitly disable attempt to use clustershell, set to '1'
USE_CLUSTERSHELL = '@USE_CLUSTERSHELL@'
### Enable Python function tracing, set to '1'
PYFE_TRACE_FUNC = '@PYFE_TRACE_FUNC@'
### Prefer job launcher's method to kill a jobstep, set to '1'
USE_JOBLAUNCHER_KILL = '@USE_JOBLAUNCHER_KILL@'
### Set to '1' to enable Flux integration with job launcher
USE_FLUX = '@USE_FLUX@'

if __name__ == '__main__':
  print('SCR_CNTL_BASE = \"' + SCR_CNTL_BASE + '\"')
  print('SCR_CACHE_BASE = \"' + SCR_CACHE_BASE + '\"')
  print('SCR_CACHE_SIZE = \"' + SCR_CACHE_SIZE + '\"')
  print('SCR_CONFIG_FILE = \"' + SCR_CONFIG_FILE + '\"')
  print('X_BINDIR = \"' + X_BINDIR + '\"')
  print('X_LIBDIR = \"' + X_LIBDIR + '\"')
  print('PDSH_EXE = \"' + PDSH_EXE + '\"')
  print('USE_CLUSTERSHELL = \"' + USE_CLUSTERSHELL + '\"')
  print('PYFE_TRACE_FUNC = \"' + PYFE_TRACE_FUNC + '\"')
  print('USE_JOBLAUNCHER_KILL = \"' + USE_JOBLAUNCHER_KILL + '\"')
  print('USE_FLUX = \"' + USE_FLUX + '\"')
