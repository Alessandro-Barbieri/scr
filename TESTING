setenv CFLAGS "-g -O0"
setenv scrversion scr-1.1-6

#Uploading a new release to sourceforge
First, create directory via web, then run a command like the following:
scp ${scrversion}.tar.gz <username>,scalablecr@frs.sourceforge.net:/home/frs/project/s/sc/scalablecr/releases/<new_directory>/.

# build the dist tarball
make distclean
./autogen.sh
./configure --prefix=/usr/local/tools/scr-1.1 --with-scr-config-file=/etc/scr.conf
make dist

# check that a direct build works
make

# unzip the dist tarball, configure, make, make install
rm -rf ../scr-dist
mkdir ../scr-dist
mv ${scrversion}.tar.gz ../scr-dist/.
cd ../scr-dist
tar -zxf ${scrversion}.tar.gz
cd ${scrversion}
./configure --prefix=/g/g0/moody20/packages/scr-dist/testing --with-scr-config-file=/etc/scr.conf
make
make install

# cd to examples directory, and check that build of test programs works
cd /g/g0/moody20/packages/scr-dist/testing/examples
setenv OPT "-g -O0"
make

# get an allocation
mxterm 4 32 120

# set up initial enviroment for testing
setenv jobid 341
setenv downnode coastal1147
setenv LD_LIBRARY_PATH ../lib
srun -n4 -N4 /bin/rm -rf /tmp/moody20/scr.$jobid
srun -n4 -N4 /bin/rm -rf /ssd/moody20/scr.$jobid
setenv SCR_PREFIX `pwd`
setenv SCR_FETCH 0
setenv SCR_FLUSH 0
setenv SCR_DEBUG 1
setenv SCR_JOB_NAME testing_job
setenv SCR_LOG_ENABLE 0

# check that a run works
srun -n4 -N4 ./test_api

# check that the next run bails out due to SCR_FINALIZE_CALLED
srun -n4 -N4 ./test_api

# remove halt file and run again, check that checkpoints continue where last run left off
../bin/scr_halt -r
srun -n4 -N4 ./test_api

# delete all files from /ssd on rank 0, remove halt file, run again, check that rebuild works
rm -rf /ssd/moody20/scr.$jobid
../bin/scr_halt -r
srun -n4 -N4 ./test_api

# delete latest checkpoint directory from two nodes, remove halt file, run again, check that rebuild works for older checkpoint
srun -n2 -N2 /bin/rm -rf /ssd/moody20/scr.$jobid/checkpoint_18
../bin/scr_halt -r
srun -n4 -N4 ./test_api

# delete all files from all nodes, remove halt file, run again, check that run starts over
srun -n4 -N4 /bin/rm -rf /ssd/moody20/scr.$jobid
../bin/scr_halt -r
srun -n4 -N4 ./test_api

# clear the cache and control directory
srun -n4 -N4 /bin/rm -rf /tmp/moody20/scr.$jobid
srun -n4 -N4 /bin/rm -rf /ssd/moody20/scr.$jobid

# check that scr_cntl_dir returns good values
../bin/scr_cntl_dir
../bin/scr_cntl_dir --base
../bin/scr_cntl_dir --cache
../bin/scr_cntl_dir --cache --base

# check that scr_list_down_nodes returns good values
../bin/scr_list_down_nodes
../bin/scr_list_down_nodes --down $downnode
../bin/scr_list_down_nodes --reason --down $downnode
setenv SCR_EXCLUDE_NODES $downnode
../bin/scr_list_down_nodes
../bin/scr_list_down_nodes --reason
unsetenv SCR_EXCLUDE_NODES

# check that scr_halt seems to work
../bin/scr_halt --list
../bin/scr_halt --before '3pm today'
../bin/scr_halt --after '4pm today'
../bin/scr_halt --seconds 1200
../bin/scr_halt --unset-before
../bin/scr_halt --unset-after
../bin/scr_halt --unset-seconds
../bin/scr_halt
../bin/scr_halt --checkpoints 5
../bin/scr_halt --unset-checkpoints
../bin/scr_halt --unset-reason
../bin/scr_halt --remove

# check that scr_env seems to work
../bin/scr_env --user
../bin/scr_env --jobid
../bin/scr_env --nodes
../bin/scr_env --down

# check that scr_prerun works
../bin/scr_prerun

# check that scr_postrun works (w/ empty cache)
../bin/scr_postrun

# clear the cache, make a new run, and check that scr_postrun drains successfully (no rebuild)
srun -n4 -N4 /bin/rm -rf /tmp/moody20/scr.$jobid
srun -n4 -N4 /bin/rm -rf /ssd/moody20/scr.$jobid
srun -n4 -N4 ./test_api
../bin/scr_postrun

# fake a down node via EXCLUDE_NODES and redo above test (check that rebuild during drain works)
setenv SCR_EXCLUDE_NODES $downnode
srun -n4 -N4 /bin/rm -rf /tmp/moody20/scr.$jobid
srun -n4 -N4 /bin/rm -rf /ssd/moody20/scr.$jobid
srun -n4 -N4 ./test_api
../bin/scr_postrun
unsetenv SCR_EXCLUDE_NODES

# delete all files, enable fetch, run again, check that fetch succeeds
srun -n4 -N4 /bin/rm -rf /tmp/moody20/scr.$jobid
srun -n4 -N4 /bin/rm -rf /ssd/moody20/scr.$jobid
setenv SCR_FETCH 1
srun -n4 -N4 ./test_api

# delete all files from 2 nodes, remove halt file, run again, check that distribute fails but fetch succeeds
srun -n2 -N2 /bin/rm -rf /tmp/moody20/scr.$jobid
srun -n2 -N2 /bin/rm -rf /ssd/moody20/scr.$jobid
../bin/scr_halt -r
srun -n4 -N4 ./test_api

# delete all files, corrupt file on disc, run again, check that fetch of current fails but old succeeds
srun -n4 -N4 /bin/rm -rf /tmp/moody20/scr.$jobid
srun -n4 -N4 /bin/rm -rf /ssd/moody20/scr.$jobid
vi -b /g/g0/moody20/packages/scr-dist/testing/examples/scr.current/rank_2.ckpt
srun -n4 -N4 ./test_api

# remove halt file, enable flush, run again and check that flush succeeds and that postrun realizes that
../bin/scr_halt -r
setenv SCR_FLUSH 10
srun -n4 -N4 ./test_api
../bin/scr_postrun

# clear cache and check that scr_srun works
srun -n4 -N4 /bin/rm -rf /tmp/moody20/scr.$jobid
srun -n4 -N4 /bin/rm -rf /ssd/moody20/scr.$jobid
../bin/scr_srun -n4 -N4 ./test_api
