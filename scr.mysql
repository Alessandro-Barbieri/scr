# This file defines the database tables used for MySQL logging.
# To set up the database, first set two passwords for the "scr"
# and "scr_insert" users in the respective "IDENTIFIED BY" fields,
# e.g.,
#   GRANT ALL
#     ON scr.* TO `scr`
#     IDENTIFIED BY 'MySecretPassword1'
# Then provide this file as input to a mysql command on the host
# running the MySQL server, e.g.,.
#   mysql -u root -p < scr.mysql
#
# After creating the database, one must then specify the hostname,
# username, password, and database name in the system scr.conf file.
#
# The SCR library and the scripts both read and write records to
# this database.

# !!!! WARNING !!!!
# Currently all users have full read and write access to the
# SCR logging database, so clever users can see data on jobs from
# other users.
# !!!! WARNING !!!!

CREATE DATABASE IF NOT EXISTS `scr`;

# !!!! TODO !!!!
# Define passwords in the IDENTIFIED BY fields before creating the
# database.
# !!!! TODO !!!!

# !!!! WARNING !!!!
# Be sure no passwords are recorded in this file when checking it
# into a revision control system.
# !!!! WARNING !!!!

GRANT ALL
  ON scr.* TO `scr`
  IDENTIFIED BY '';
GRANT INSERT,SELECT
  ON scr.* TO `scr_insert`
  IDENTIFIED BY '';

USE `scr`;

DROP TABLE IF EXISTS `usernames`;
DROP TABLE IF EXISTS `jobnames`;
DROP TABLE IF EXISTS `jobs`;
DROP TABLE IF EXISTS `transfers`;
DROP TABLE IF EXISTS `events`;

# maps a username string to an id
CREATE TABLE IF NOT EXISTS `usernames` (
        `id`   INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `name` VARCHAR(512) NOT NULL,
        UNIQUE INDEX `name` (`name`(512))
) TYPE=MyISAM;

# maps a jobname string to an id
CREATE TABLE IF NOT EXISTS `jobnames` (
        `id`   INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `name` VARCHAR(512) NOT NULL,
        UNIQUE INDEX `name` (`name`(512))
) TYPE=MyISAM;

# records username, jobname, and starttime of a job
# the same username and jobname maps to the same "job"
# which enables one to track data across a series of runs
CREATE TABLE IF NOT EXISTS `jobs` (
        `id`          INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `username_id` INT UNSIGNED NOT NULL, # id of user running the job
        `jobname_id`  INT UNSIGNED NOT NULL, # id of the name of the job
        `start`       DATETIME     NOT NULL, # time that job started
        UNIQUE INDEX `name` (`username_id`,`jobname_id`)
) TYPE=MyISAM;

# records checkpoint, fetch, and flush operation times and directories
CREATE TABLE IF NOT EXISTS `transfers` (
        `id`            INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `jobid`         INT          NOT NULL, # id to jobs table
        `type`          VARCHAR(32)  NOT NULL, # fetch, flush, or drain?
        `checkpoint_id` INT UNSIGNED NOT NULL, # SCR checkpoint iteration number
        `start`         DATETIME     NOT NULL, # start time of operation
        `end`           DATETIME     NOT NULL, # end time of operation
        `time`          FLOAT        NOT NULL, # total time of operation
        `bytes`         FLOAT        NOT NULL, # total bytes moved
        `bw`            FLOAT        NOT NULL, # bandwidth of operation
        `from`          BLOB         NOT NULL, # source directory
        `to`            BLOB         NOT NULL, # target directory
        INDEX `jobid` (`jobid`)
) TYPE=MyISAM;

# records various events, including failed nodes
CREATE TABLE IF NOT EXISTS `events` (
        `id`            INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
        `jobid`         INT          NOT NULL, # id to jobs table
        `type`          VARCHAR(32)  NOT NULL, # fetch, flush, or drain?
        `checkpoint_id` INT UNSIGNED     NULL, # SCR checkpoint iteration number
        `start`         DATETIME         NULL, # start time of operation
        `time`          FLOAT            NULL, # total time of operation
        `note`          BLOB             NULL, # source directory
        INDEX `jobid` (`jobid`)
) TYPE=MyISAM;
